@using Microsoft.AspNetCore.Identity
@using Service
@using Service.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Главная страница";
}

<h1>Добро пожаловать!</h1>

@if (User?.Identity?.IsAuthenticated == true)
{
    <p>Вы вошли как: @User.Identity.Name</p>
}
else
{
    <p>Пожалуйста, войдите в систему.</p>
}

<ul class="navbar-nav">
    @if (SignInManager?.IsSignedIn(User) == true)
    {
        var user = await UserManager.GetUserAsync(User);
        @if (user != null)
        {
            @if (await UserManager.IsInRoleAsync(user, "Admin"))
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="Admin" asp-action="Index">Перейти в панель администратора</a>
                </li>
            }
            @if (await UserManager.IsInRoleAsync(user, "Operator"))
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="Operator" asp-action="Index">Перейти в панель оператора</a>
                </li>
            }
            @if (await UserManager.IsInRoleAsync(user, "Engineer"))
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="Engineer" asp-action="Index">Перейти в панель инженера</a>
                </li>
            }
        }
        
    }
    else
    {
    }
</ul>